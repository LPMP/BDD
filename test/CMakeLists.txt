add_subdirectory(bdd)

add_executable(test_avl_tree test_avl_tree.cpp)
target_link_libraries(test_avl_tree lineq_bdd LPMP-BDD)
add_test(test_avl_tree test_avl_tree)

add_executable(test_ILP_parser test_ILP_parser.cpp)
target_link_libraries(test_ILP_parser ILP_parser LPMP-BDD)
add_test(test_ILP_parser test_ILP_parser)

add_executable(test_ILP_input_to_bdd test_ILP_input_to_bdd.cpp)
target_link_libraries(test_ILP_input_to_bdd ILP_parser LPMP-BDD)
add_test(test_ILP_input_to_bdd test_ILP_input_to_bdd)

#add_executable(test_single_bdd_inference test_single_bdd_inference.cpp)
#target_link_libraries(test_single_bdd_inference ILP_parser LPMP-BDD)
#add_test(test_single_bdd_inference test_single_bdd_inference)

#add_executable(test_two_bdd_inference test_two_bdd_inference.cpp)
#target_link_libraries(test_two_bdd_inference ILP_parser LPMP bdd)
#add_test(test_two_bdd_inference test_two_bdd_inference)

add_executable(test_bdd_bipartite_matching_problem test_bdd_bipartite_matching_problem.cpp)
target_link_libraries(test_bdd_bipartite_matching_problem LPMP-BDD)
add_test(test_bdd_bipartite_matching_problem test_bdd_bipartite_matching_problem)

add_executable(test_bdd_small_binary_mrfs test_bdd_small_binary_mrfs.cpp)
target_link_libraries(test_bdd_small_binary_mrfs LPMP-BDD)
add_test(test_bdd_small_binary_mrfs test_bdd_small_binary_mrfs)

#add_executable(test_bdd_grid_graph test_bdd_grid_graph.cpp)
#target_link_libraries(test_bdd_grid_graph LPMP bdd ILP_parser)
#add_test(test_bdd_grid_graph test_bdd_grid_graph)

add_executable(test_ILP_input_export test_ILP_input_export.cpp)
target_link_libraries(test_ILP_input_export LPMP-BDD ILP_input ILP_parser OPB_parser)
add_test(test_ILP_input_export test_ILP_input_export)

#add_executable(test_random_inequality_to_bdd test_random_inequality_to_bdd.cpp)
#target_link_libraries(test_random_inequality_to_bdd LPMP-BDD)
#add_test(test_random_inequality_to_bdd test_random_inequality_to_bdd)

#add_executable(test_random_chains_bdd test_random_chains_bdd.cpp)
#target_link_libraries(test_random_chains_bdd ILP_parser LPMP bdd)
#add_test(test_random_chains_bdd test_random_chains_bdd)

#add_executable(test_ILP_input_reordering test_ILP_input_reordering.cpp)
#target_link_libraries(test_ILP_input_reordering ILP_parser LPMP)
#add_test(test_ILP_input_reordering test_ILP_input_reordering)

#add_executable(test_bdd_preprocessor test_bdd_preprocessor.cpp)
#target_link_libraries(test_bdd_preprocessor ILP_parser LPMP bdd)
#add_test(test_bdd_preprocessor test_bdd_preprocessor)

add_executable(test_decomposition_mma_single_bdd test_decomposition_mma_single_bdd.cpp)
target_link_libraries(test_decomposition_mma_single_bdd LPMP-BDD)
add_test(test_decomposition_mma_single_bdd test_decomposition_mma_single_bdd)

add_executable(test_loose_gm_tightening test_loose_gm_tightening.cpp)
target_link_libraries(test_loose_gm_tightening LPMP-BDD)
add_test(test_loose_gm_tightening test_loose_gm_tightening)

add_executable(test_loose_covering_problem test_loose_covering_problem.cpp)
target_link_libraries(test_loose_covering_problem LPMP-BDD)
add_test(test_loose_covering_problem test_loose_covering_problem)

add_executable(test_bdd_sequential_base test_bdd_sequential_base.cpp)
target_link_libraries(test_bdd_sequential_base LPMP-BDD)
add_test(test_bdd_sequential_base test_bdd_sequential_base)

add_executable(test_bdd_parallel_mma test_bdd_parallel_mma.cpp)
target_link_libraries(test_bdd_parallel_mma LPMP-BDD)
add_test(test_bdd_parallel_mma test_bdd_parallel_mma)

if(WITH_CUDA)
    add_executable(test_bdd_cuda_base test_bdd_cuda_base.cpp)
    target_link_libraries(test_bdd_cuda_base LPMP-BDD bdd_cuda_base)
    add_test(test_bdd_cuda_base test_bdd_cuda_base)

    add_executable(test_bdd_cuda_base_serialization test_bdd_cuda_base_serialization.cpp)
    target_link_libraries(test_bdd_cuda_base_serialization LPMP-BDD bdd_cuda_base)
    add_test(test_bdd_cuda_base_serialization test_bdd_cuda_base_serialization)

    add_executable(test_bdd_cuda_parallel_mma test_bdd_cuda_parallel_mma.cpp)
    target_link_libraries(test_bdd_cuda_parallel_mma LPMP-BDD bdd_cuda_parallel_mma)
    add_test(test_bdd_cuda_parallel_mma test_bdd_cuda_parallel_mma)

    add_executable(test_bdd_cuda_min_marginals test_bdd_cuda_min_marginals.cpp)
    target_link_libraries(test_bdd_cuda_min_marginals LPMP-BDD bdd_cuda_base)
    add_test(test_bdd_cuda_min_marginals test_bdd_cuda_min_marginals)
endif()

add_executable(test_bdd_solver_fix_variable test_bdd_solver_fix_variable.cpp)
target_link_libraries(test_bdd_solver_fix_variable LPMP-BDD)
add_test(test_bdd_solver_fix_variable test_bdd_solver_fix_variable)

add_executable(test_variable_reordering_invariance test_variable_reordering_invariance.cpp)
target_link_libraries(test_variable_reordering_invariance LPMP-BDD)
add_test(test_variable_reordering_invariance test_variable_reordering_invariance)

add_executable(test_bdd_infeasible_problem test_bdd_infeasible_problem.cpp)
target_link_libraries(test_bdd_infeasible_problem LPMP-BDD)
add_test(test_bdd_infeasible_problem test_bdd_infeasible_problem)

